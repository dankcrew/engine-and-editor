LANG := en_US.UTF-8
SHELL := bash
.SHELLFLAGS := -eu -o pipefail -c # run '/bin/bash ... -c /bin/cmd'
.DEFAULT_GOAL := all

grails := grails -plain-output -non-interactive

.PHONY: test-unit
test-unit: ## Run unit tests
	$(grails) test-app -unit -no-reports

.PHONY: test-integration
test-integration: ## Run integration tests
	$(grails) test-app -integration -no-reports

.PHONY: test-rest
test-rest:
	$(MAKE) -C rest-e2e-tests test

.PHONY: test-e2e
test-e2e:
	$(MAKE) -C rest-e2e-tests test/e2e

.PHONY: test-stress
test-stress:
	$(MAKE) -C rest-e2e-tests test/stress


.PHONY: compile
compile: ## Compile code
	$(grails) compile

services := mysql redis cassandra parity-node0 parity-sidechain-node0 bridge data-union-server broker-node-storage-1 nginx smtp platform
.PHONY: start
start: ## Run streamr-docker-dev start ...
	streamr-docker-dev start $(services)

.NOTPARALLEL: start-wait
.PHONY: start-wait
start-wait: ## Run streamr-docker-dev start ... --wait
	streamr-docker-dev start $(services) --wait

.PHONY: stop
stop: ## Run streamr-docker-dev stop
	streamr-docker-dev stop

.PHONY: ps
ps: ## Run streamr-docker-dev ps
	streamr-docker-dev ps


.PHONY: docker-build-dev
docker-build-dev: ## Build Docker dev container
	docker build \
		--build-arg GRAILS_WAR_ENV=test \
		--tag streamr/engine-and-editor:dev .

.PHONY: docker-push-dev
docker-push-dev: docker-build-dev ## Push Docker dev container to registry
	docker push streamr/engine-and-editor:dev

.PHONY: docker-run-dev
docker-run-dev: ## Run Docker dev container locally
	docker run -i -t -d --rm -p 8081:8081/tcp streamr/engine-and-editor:dev

.PHONY: docker-login
docker-login: ## Login with Docker
	docker login -u TODO_DOCKER_USER -p TODO_DOCKER_PASS

.PHONY: help
help: ## Show Help
	@grep -E '^[a-zA-Z_-]+%?:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "%-20s %s\n", $$1, $$2}'|sort
