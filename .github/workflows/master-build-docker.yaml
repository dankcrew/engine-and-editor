name: Master build Docker

on:
  pull_request: # TODO: Switch to push before merge

env:
  GRAILS_VERSION: '2.5.6'
  JAVA_VERSION: '1.8'

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: sdkman/sdkman-action@master
        id: sdkman-java
        with:
          candidate: java
          version: 8.0.275-zulu
      - uses: actions/setup-java@v1.4.3
        id: setup-java
        with:
          java-version: $JAVA_VERSION
          jdkFile: ${{ steps.sdkman-java.outputs.file }}
      - uses: sdkman/sdkman-action@master
        id: sdkman-grails
        with:
          candidate: grails
          version: $GRAILS_VERSION
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('grails-app/conf/BuildConfig.groovy') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Install Grails
        run: |
          unzip -q ${{ steps.sdkman-grails.outputs.file }} -d "$HOME"
          echo "$HOME/grails-$GRAILS_VERSION/bin" >> $GITHUB_PATH
      - name: Build
        run: |
          make -f Makefile.ci compile
      - name: Unit Test
        run: |
          make -f Makefile.ci test-unit
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.2
        with:
          services-to-start: "mysql redis"
      - name: Integration test
        run: |
          make -f Makefile.ci test-integration
  e2e:
    name: End to end test
    runs-on: ubuntu-16.04
    #env:
      #DOCKER_BUILDKIT: 0
      #COMPOSE_DOCKER_CLI_BUILD: 0
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: sdkman/sdkman-action@master
        id: sdkman-java
        with:
          candidate: java
          version: 8.0.275-zulu
      - uses: actions/setup-java@v1.4.3
        id: setup-java
        with:
          java-version: $JAVA_VERSION
          jdkFile: ${{ steps.sdkman-java.outputs.file }}
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('grails-app/conf/BuildConfig.groovy') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Set variables
        run: |
          #echo "NODE_VERSION=$(cat rest-e2e-tests/.nvmrc | sed -e '/^v/ s/^v//')" >> $GITHUB_ENV
          echo "NODE_VERSION=14.15.4" >> $GITHUB_ENV
          echo "Node version: $NODE_VERSION"
          java -version
      - name: Install Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.4
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.2
        with:
          services-to-start: "mysql redis cassandra parity-node0 parity-sidechain-node0 bridge data-union-server broker-node-storage-1 nginx smtp"
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1.1.1
      # - name: Build Docker image
      #   uses: docker/build-push-action@v2.2.2
      #   with:
      #     context: .
      #     tags: streamr/engine-and-editor:dev
      #     file: ./Dockerfile
      #     platforms: linux/amd64
      #     push: false
      - Name: Build Docker
        run: |
          echo "GITHUB_PATH: $GITHUB_PATH"
          echo "NODE_VERSION: $NODE_VERSION"
          docker build -f Dockerfile --build-arg GRAILS_WAR_ENV=test --tag streamr/engine-and-editor:dev .
      - name: End to End tests
        run: |
          streamr-docker-dev start engine-and-editor
          streamr-docker-dev wait
          cd rest-e2e-tests
          npm ci
          npm run test:e2e
